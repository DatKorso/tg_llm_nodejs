const { Markup } = require('telegraf');
const config = require('../config/config');

class Keyboards {
    static getMainKeyboard() {
        return Markup.keyboard([
            ['üîÑ –ù–æ–≤–∞—è —Å–µ—Å—Å–∏—è', 'üîß –í—ã–±—Ä–∞—Ç—å –º–æ–¥–µ–ª—å'],
            ['‚ÑπÔ∏è –¢–µ–∫—É—â–∞—è –º–æ–¥–µ–ª—å', '‚ùì –ü–æ–º–æ—â—å']
        ]).resize();
    }

    static getModelSelectionKeyboard() {
        const buttons = [];
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –∏ –µ–≥–æ –º–æ–¥–µ–ª–µ–π
        Object.entries(config.PROVIDERS).forEach(([provider, providerConfig]) => {
            const providerButtons = Object.entries(providerConfig.MODELS).map(([key, model]) => {
                return `${provider} - ${key}`;
            });
            buttons.push(...providerButtons.map(button => [button]));
        });
        
        // –î–æ–±–∞–≤–ª—è–µ–º –∫–Ω–æ–ø–∫—É –≤–æ–∑–≤—Ä–∞—Ç–∞
        buttons.push(['‚óÄÔ∏è –ù–∞–∑–∞–¥']);

        return Markup.keyboard(buttons).resize();
    }

    static getBackKeyboard() {
        return Markup.keyboard([['‚óÄÔ∏è –ù–∞–∑–∞–¥']]).resize();
    }
}

module.exports = Keyboards;
